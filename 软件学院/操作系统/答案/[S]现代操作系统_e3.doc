{\rtf1\adeflang1025\ansi\ansicpg936\uc2\adeff0\deff0\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}\'cb\'ce\'cc\'e5{\*\falt SimSun};}
{\f36\fnil\fcharset134\fprq2{\*\panose 00000000000000000000}@\'cb\'ce\'cc\'e5;}{\f38\froman\fcharset238\fprq2 Times New Roman CE;}{\f39\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f41\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f42\froman\fcharset162\fprq2 Times New Roman Tur;}{\f43\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f44\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f45\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f46\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f170\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}{\f400\fnil\fcharset0\fprq2 @\'cb\'ce\'cc\'e5 Western;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\qj \li0\ri0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs21\lang1033\langfe2052\kerning2\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af13\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{
\s15\qc \li0\ri0\nowidctlpar\brdrb\brdrs\brdrw15\brsp20 \tqc\tx4153\tqr\tx8306\wrapdefault\aspalpha\aspnum\faauto\nosnaplinegrid\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs18\alang1025 \ltrch\fcs0 
\fs18\lang1033\langfe2052\kerning2\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext15 \styrsid15098623 header;}{\s16\ql \li0\ri0\nowidctlpar
\tqc\tx4153\tqr\tx8306\wrapdefault\aspalpha\aspnum\faauto\nosnaplinegrid\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs18\alang1025 \ltrch\fcs0 \fs18\lang1033\langfe2052\kerning2\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 
\sbasedon0 \snext16 \styrsid15098623 footer;}{\*\cs17 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \ul\cf2 \sbasedon10 \styrsid15098623 Hyperlink;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\pgptbl {\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}}{\*\rsidtbl \rsid655764
\rsid1069012\rsid1462542\rsid2231290\rsid2847010\rsid2909350\rsid3152368\rsid3409549\rsid3869496\rsid4001084\rsid4419642\rsid4477090\rsid6493368\rsid7939098\rsid8944438\rsid9449096\rsid10236727\rsid10246904\rsid10505668\rsid10897542\rsid11282186
\rsid11941893\rsid12669821\rsid13312263\rsid13773176\rsid14707564\rsid15098623\rsid15222873\rsid15611782\rsid15665703\rsid15817367\rsid15866361\rsid16080730\rsid16195404\rsid16607898}{\*\generator Microsoft Word 11.0.0000;}{\info{\title 现代操作系统课后习题答案}
{\subject 现代操作系统课后习题答案}{\author \'ce\'c4\'b5\'b5\'cf\'c2\'d4\'d8\'cd\'f8}{\keywords \'ce\'c4\'b5\'b5\'cf\'c2\'d4\'d8}{\doccomm http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb}{\operator \'ce\'c4\'b5\'b5\'cf\'c2\'d4\'d8\'cd\'f8}{\creatim\yr2010\mo9\dy28\hr22\min9}{\revtim\yr2010\mo10\dy8\hr23\min4}{\version16}{\edmins12}
{\nofpages1}{\nofwords57}{\nofchars331}{\*\manager https://www.wendangwang.com/}{\*\company https://www.wendangwang.com/}{\*\category \'ce\'c4\'b5\'b5\'cf\'c2\'d4\'d8}{\nofcharsws387}{\vern24613}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schema
s.microsoft.com/office/word/2003/wordml}{\xmlns2 urn:schemas-microsoft-com:office:smarttags}}\paperw11906\paperh16838\margl1134\margr1134\margt1134\margb1134\gutter0\ltrsect 
\deftab420\ftnbj\aenddoc\donotembedsysfont1\donotembedlingdata0\grfdocevents0\validatexml1\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors1\formshade\horzdoc\dgmargin\dghspace180\dgvspace156\dghorigin1134\dgvorigin1134\dghshow0
\dgvshow2\jcompress\lnongrid\viewkind1\viewscale85\splytwnine\ftnlytwnine\htmautsp\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct\asianbrkrule\rsidroot3869496\newtblstyruls\nogrowautofit 
{\*\fchars 
!),.:\'3b?]\'7d\'a1\'a7\'a1\'a4\'a1\'a6\'a1\'a5\'a8\'44\'a1\'ac\'a1\'af\'a1\'b1\'a1\'ad\'a1\'c3\'a1\'a2\'a1\'a3\'a1\'a8\'a1\'a9\'a1\'b5\'a1\'b7\'a1\'b9\'a1\'bb\'a1\'bf\'a1\'b3\'a1\'bd\'a3\'a1\'a3\'a2\'a3\'a7\'a3\'a9\'a3\'ac\'a3\'ae\'a3\'ba\'a3\'bb\'a3\'bf\'a3\'dd\'a3\'e0\'a3\'fc\'a3\'fd\'a1\'ab\'a1\'e9
}{\*\lchars ([\'7b\'a1\'a4\'a1\'ae\'a1\'b0\'a1\'b4\'a1\'b6\'a1\'b8\'a1\'ba\'a1\'be\'a1\'b2\'a1\'bc\'a3\'a8\'a3\'ae\'a3\'db\'a3\'fb\'a1\'ea\'a3\'a4}\fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0{\*\template 
C:\\Documents and Settings\\Administrator\\\'d7\'c0\'c3\'e6\\doc.dot}{\*\ftnsep \ltrpar \pard\plain \ltrpar\qj \li0\ri0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs21\lang1033\langfe2052\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid14707564 \chftnsep 
\par }}{\*\ftnsepc \ltrpar \pard\plain \ltrpar\qj \li0\ri0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs21\lang1033\langfe2052\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid14707564 \chftnsepc 
\par }}{\*\aftnsep \ltrpar \pard\plain \ltrpar\qj \li0\ri0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs21\lang1033\langfe2052\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid14707564 \chftnsep 
\par }}{\*\aftnsepc \ltrpar \pard\plain \ltrpar\qj \li0\ri0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs21\lang1033\langfe2052\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid14707564 \chftnsepc 
\par }}\ltrpar \sectd \ltrsect\linex0\headery851\footery992\colsx425\endnhere\sectlinegrid312\sectspecifyl\sectrsid6493368\sftnbj {\headerr \ltrpar \pard\plain \ltrpar\s15\qc \li0\ri0\nowidctlpar\brdrb\brdrs\brdrw15\brsp20 
\tqc\tx4153\tqr\tx8306\wrapdefault\aspalpha\aspnum\faauto\nosnaplinegrid\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs18\alang1025 \ltrch\fcs0 \fs18\lang1033\langfe2052\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\rtlch\fcs1 
\af0\afs24 \ltrch\fcs0 \b\f13\fs24\cf6\insrsid11941893 \loch\af13\hich\af13\dbch\f13 \'ce\'c4\'b5\'b5}{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f13\fs24\cf6\insrsid6493368\charrsid15098623 \loch\af13\hich\af13\dbch\f13 \'cf\'c2\'d4\'d8}{\rtlch\fcs1 
\af0\afs24 \ltrch\fcs0 \b\f13\fs24\cf6\insrsid6493368\charrsid15098623 \hich\af13\dbch\af13\loch\f13  }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\f13\fs24\cf6\insrsid6493368\charrsid15098623 \loch\af13\hich\af13\dbch\f13 \'c3\'e2\'b7\'d1\'ce\'c4\'b5\'b5
\'cf\'c2\'d4\'d8}{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \b\fs24\cf6\loch\af13\insrsid6493368\charrsid15098623 
\par }{\field{\*\fldinst {\rtlch\fcs1 \af0\afs32 \ltrch\fcs0 \f13\fs32\cf6\insrsid11941893 \hich\af13\dbch\af13\loch\f13  HYPERLINK "}{\rtlch\fcs1 \af0\afs32 \ltrch\fcs0 \f13\fs32\cf6\insrsid11941893\charrsid11941893 \hich\af13\dbch\af13\loch\f13 
https://www.wendangwang.com/}{\rtlch\fcs1 \af0\afs32 \ltrch\fcs0 \f13\fs32\cf6\insrsid11941893 \hich\af13\dbch\af13\loch\f13 " }{\rtlch\fcs1 \af0\afs32 \ltrch\fcs0 \fs32\cf6\loch\af13\insrsid8944438\charrsid13773176 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001e00000068007400740070003a002f002f007700770077002e00770065006e00640061006e0067007800690061007a00610069002e0063006f006d002f000000e0c9ea79f9bace118c8200aa004ba90b5400000068007400740070003a002f002f0077007700
77002e00770065006e00640061006e0067007800690061007a00610069002e0063006f006d002f000000795881f43b1d7f48af2c825dc485276300000000a5ab000000000000}}}{\fldrslt {\rtlch\fcs1 \af0\afs32 \ltrch\fcs0 \cs17\f13\fs32\ul\cf2\insrsid11941893\charrsid13773176 
\hich\af13\dbch\af13\loch\f13 https://www.wendangwang.com/}}}\sectd \linex0\endnhere\sectdefaultcl\sftnbj {\rtlch\fcs1 \af0\afs32 \ltrch\fcs0 \fs32\cf6\loch\af13\insrsid6493368\charrsid15098623 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxta \dbch )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}
{\pntxta \dbch )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}\pard\plain \ltrpar\qj \li0\ri0\sl180\slmult0
\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6493368 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs21\lang1033\langfe2052\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid6493368 \loch\af0\hich\af0\dbch\f13 \'a1\'a1\'a1\'a1}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid6493368 
\par }\pard \ltrpar\qc \li0\ri0\sl180\slmult0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15817367 {\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\insrsid6493368\charrsid6493368 \loch\af0\hich\af0\dbch\f13 \'b1\'be\'ce\'c4\'b5\'b5
\loch\af0\hich\af0\dbch\f13 \'cf\'c2\'d4\'d8\'d7\'d4}{\field\fldedit{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\cf11\insrsid16080730 \hich\af0\dbch\af13\loch\f0 HYPERLINK "https://www.wendangwang.com/"}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\fs24\cf11\insrsid8944438\charrsid16080730 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b5400000068007400740070003a002f002f007700770077002e00770065006e00640061006e0067007800690061007a00610069002e0063006f006d002f000000795881f43b1d7f48af2c825dc485276300000000a5ab
0000000000}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs17\fs24\ul\cf2\insrsid11941893 \loch\af0\hich\af0\dbch\f13 \'ce\'c4\'b5\'b5}{\rtlch\fcs1 \af0 \ltrch\fcs0 \cs17\fs24\ul\cf2\insrsid6493368\charrsid6493368 \loch\af0\hich\af0\dbch\f13 \'cf\'c2\'d4\'d8
\'cd\'f8}}}\sectd \linex0\headery851\footery992\colsx425\endnhere\sectlinegrid312\sectspecifyl\sectrsid6493368\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\insrsid16607898 \loch\af0\hich\af0\dbch\f13 \'a3\'ac\'c4\'da\'c8\'dd}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\fs24\insrsid6493368\charrsid6493368 \loch\af0\hich\af0\dbch\f13 \'bf\'c9\'c4\'dc\'b2\'bb\'cd\'ea\'d5\'fb\'a3\'ac\'c4\'fa\'bf\'c9\'d2\'d4\'b5\'e3\'bb\'f7\'d2\'d4\'cf\'c2\'cd\'f8\'d6\'b7\'bc\'cc\'d0\'f8\'d4\'c4\'b6\'c1\'bb\'f2\'cf\'c2\'d4\'d8}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \fs24\insrsid6493368 \loch\af0\hich\af0\dbch\f13 \'a3\'ba}{\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\insrsid6493368 
\par }\pard \ltrpar\qc \li0\ri0\sl180\slmult0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3869496 {\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\insrsid3152368 \hich\af0\dbch\af13\loch\f0 
HYPERLINK "http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb"}{\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\insrsid3152368\charrsid3152368 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b5400000068007400740070003a002f002f007700770077002e00770065006e00640061006e0067007800690061007a00610069002e0063006f006d002f000000795881f43b1d7f48af2c825dc485276300000000a5ab
0000}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs17\fs24\ul\cf2\insrsid3869496\charrsid15866361 \hich\af0\dbch\af13\loch\f0 http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb}}}\sectd 
\linex0\headery851\footery992\colsx425\endnhere\sectlinegrid312\sectspecifyl\sectrsid6493368\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\insrsid6493368\charrsid6493368 
\par }\pard \ltrpar\qj \li0\ri0\sl180\slmult0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6493368 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid6493368 
\par }\pard \ltrpar\qc \li0\ri0\sl180\slmult0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3869496 {\rtlch\fcs1 \af0\afs36 \ltrch\fcs0 \b\f13\fs36\insrsid3869496\charrsid15866361 \hich\af13\dbch\af13\loch\f13 现代操作系统课后习题答案}
{\rtlch\fcs1 \af0\afs36 \ltrch\fcs0 \b\fs36\insrsid6493368\charrsid15866361 
\par }\pard \ltrpar\qj \li0\ri0\sl180\slmult0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6493368 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid6493368 
\par 
\par }\pard \ltrpar\qj \li0\ri0\sl360\slmult1\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15866361 {\rtlch\fcs1 \af0 \ltrch\fcs0 \f13\fs24\insrsid3869496\charrsid15866361 \hich\af13\dbch\af13\loch\f13 电子工业出版社\par\par
第二章 进程管理\par\par第一部分 教材习题（P81）\par\par \par\par3、为什么程序并发执行会产生间断性特征？（P36）\par\par \par\par4、程序并发执行，为何会失去封闭性和可再现性？（P37）\par\par【解】程序在并发执行时，是多个程序共享系统中的各种资源，因而这些资源的状态将由多个程序来改变，致使程序的运行已失去了封闭性。同时由于失去了封闭性，也将导致其再失去可再现性。程序在并发执行时，由于失去了封闭性，程序经过多次执行后，其计算机结果已与并发程序的执行速度有关，从而使程序的执行失去了可再现性。\par\par \par\par5、在操作系统中为什么要引入进程概念？（P37）它会产生什么样的影响？\par\par【解】\par\par在操作系统中引入进程的概念，是为了实现多个程序的并发执行。传统的程序不能与其他程序并发执行，只有在为之创建进程后，才能与其他程序（进程）并发执行。这是因为并发执行的程序（即进程）是“停停走走”地执行，只有在为它创建进程后，在它停下时，方能将其现场信息保存在它的PCB中，待下次被调度执行是，再从PCB中恢复CPU现场并继续执行，而传统的程序却无法满足上述要求。\par\par建立进程所带来的好处是使多个程序能并发执行，这极大地提高了资源利用率和系统吞吐量。但管理进程也需付出一定的代价，包括进程控制块及协调各运行机构所占用的内存空间开销，以及为进行进程间的切换、同步及通信等所付出的时间开销。\par\par6、试从动态性、并发性和独立性上比较进程和程序？（P37）\par\par【解】\par\par（1）动态性：进程既然是进程实体的执行过程，因此，动态性是进程最基本的特性。动态性还表现为：“它由创建而产生，由调度而执行，因得不到资源而暂停执行，以及由撤消而消亡”。可见，进程有一定的生命期。而程序只是一组有序指令的集合，并存放在某种介质上，本身并无运动的含义，因此，程序是个静态实体。\par\par（2）并发性：所谓进程的并发，指的是多个进程实体，同存于内存中，能在一段时间内同时运行。并发性是进程的重要特征，同时也成为OS的重要特征。引入进程的目的也正是为了使其程序能和其它进程的程序并发执行，而程序是无法并发执行的。\par\par（3）独立性：进程实体是一http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb个能独立运行的基本单位，也是系统中独立获得资源和独立调度的基本单位。凡未建立进程的程序，都不能作为一个独立的单位参加运行。\par\par试比较进程与程序的异同。\par\par【解】进程和程序是紧密相关而又完全不同的两个概念。\par\par（1）每个进程实体中包含了程序段和数据段这两个部分，因此说进程与程序是紧密相关的。但从结构上看，进程实体中除了程序段和数据段外，还必须包含一个数据结构，即PCB。\par\par（2）进程是程序的一次执行过程，因此是动态的；动态性还表现在进程由创建而产生、由调度而执行、由撤消而消亡，即它具有一定的生命期。而程序则只是一组指令的有序集合，并可\par\par永久地存放在某种介质上，其本身不具有运动的含义，因此是静态的。\par\par（3）多个进程实体可同时存放在内存中并发地执行，其实这正是引入进程的目的。程序（在没有为它创建进程时）的并发执行具有不可再现性，因此程序不能正确地并发执行。\par\par（4）进程是一个能够独立运行、独立分配资源和独立接受调度的基本单位。程序（在没有为它创建进程时）因其不具有PCB，所以它是不可能在多道程序环境下独立运行的。\par\par（5）进程与程序不一一对应。同一个程序的多次运行，将形成多个不同的进程；同一个程序的一次执行也可以产生多个进程；一个进程在其生命期的不同时候也可以执行不同的程序。\par\par7、试说明PCB的作用？为什么说PCB是进程存在的惟一标志？（P41）\par\par【解】PCB是进程实体的一部分，是OS中最重要的记录型数据结构。它记录了OS所需的、用于描述进程情况及控制进程运行所需的全部信息。PCB的作用，是使一个在多道程序环境下不能独立运行的程序（含数据）成为一个能独立运行的基本单位，一个能与其他进程并发执行的进程。或者说，OS是根据PCB来对并发执行的进程进行控制和管理的。\par\par在进程的整个生命期中，系统总是通过PCB对进程进行控制，也就是说，系统是根据进程的PCB感知到该进程的存在的，所以说，PCB是进程存在的标志。\par\par \par\par8、试说明进程在三个基本状态之间转换的典型原因？（P38）\par\par【解】\par\phttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbar（1）处于就绪状态的进程，当进程调度程序为之分配了处理机后，该进程就由就绪状态变为执行状态\par\par（2）正在执行的进程因发生某事件而无法执行，如暂时无法取得所需资源，则由执行状态转变为阻塞状态。\par\par（3）正在执行的进程，如因时间片用完或被高优先级的进程抢占处理机而被暂停执行，该进程便由执行转变为就绪状态。\par\par某系统的进程状态转换图如图所示。\par\par（1）说明引起各种状态转换的典型事件。\par\par（2）分析下述状态转换是否可立即引起其他的状态转换：1,2,3,4。\par\par \par\par【解】\par\par（1\par\par[此处图片未下载成功]\par\par
[此处图片未下载成功]\par\par
（2状态转换2必然立即引发状态转换1：状态转换2发生后，进程调度程序必然要选出一个新的就绪进程投入运行，该新进程可能是其他进程，也可能是刚从执行状态转换成就绪状态的那个进程。\par\par状态转换3可能立即引发状态转换1：状态转换3发生后，若就绪队列非空，则进程调度程序将选出一个就绪进程投入执行。\par\par状态转换4可能引发状态转换\par\par[此处图片未下载成功]\par\par
1：状态转换4发生后，若CPU空闲，并且没有其他进程竞争CPU，则该进程将被立即调度。\par\par另外，状态转换4还可能同时引发状态转换1和2：若系统采用抢占调度方式，而新就绪的进程具备抢占CPU的条件（如其优先权很高），则它可立即得到CPU转换成执行状态，而原来正在执行的进程则转换成就绪状态。\par\par \par\par某系统的进程状态变迁图，请说明：\par\par \par\par（1） 引起各种状态转换的典型事件有哪些？\par\par（2） 当我们观察系统中某些进程时，能够看到某一进程产生的一次状态转换能引起另一进程\par\par作一次状态转换。在什么情况下，当一个进程发生转换3时能立即引起另一个进程发生\par\par转换1？\par\par（3） 试说明是否会发生下述因果转换：\par\para) 2 1\par\parb) 3 2\par\parc) 4 1\par\par解http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb：\par\par（1） 当进程调度程序从就绪队列中选取一个进程投入运行时引起转换1；正在执行的进程如\par\par因时间片用完而被暂停执行就会引起转换2；正在执行的进程因等待的事件尚未发生而\par\par无法执行（如进程请求完成I/O）则会引起转换3；当进程等待的事件发生时（如I/O\par\par完成）则会引起转换4。\par\par（2） 如果就绪队列非空，则一个进程的转换3会立即引起另一个进程的转换1。这是因为一\par\par个进程发生转换3意味着正在执行的进程由执行状态变为阻塞状态，这时处理机空闲，进程调度程序必然会从就绪队列中选取一个进程并将它投入运行，因此只要就绪队列非\par\par空，一个进程的转换3能立即引起另一个进程的转换1。\par\par（3） 所谓因果转换指的是有两个转换，一个转换的发生会引起另一个转换的发生，前一个转\par\par换称为因，后一个转换称为果，这两个转换称为因果转换。当然这种因果关系并不是什\par\par么时候都能发生，而是在一定条件下才会发生。\par\para) 2 1：当某进程发生转换2时，就必然引起另一进程的转换1。因为当发生转换2时，\par\par正在执行的进程从执行状态变为就绪状态，进程调度程序必然会从就绪队列中选取一\par\par个进程投入运行，即发生转换1。\par\parb) 3 2：某个进程的转换3决不可能引起另一进程发生转换2。这是因为当前执行进程\par\par从执行状态变为阻塞状态，不可能又从执行状态变为就绪状态。\par\parc) 4 1：当处理机空闲且就绪队列为空时，某一进程发生转换4，就意味着有一个进程\par\par从阻塞状态变为就绪状态，因而调度程序就会将就绪队列中的此进程投入运行。\par\par \par\par9、为什么要引入挂起状态？（P39）该状态具有哪些性质？\par\par10、在进行进程切换时，所要保存的处理机状态信息主要有那些？（P42）\par\par【解】保存的处理机状态信息主要由处理机中的各种寄存器内容组成。这些寄存器包括：通用寄存器，指令寄存器，程序状态字PSW，用户栈指针。\par\par11、试说明引起进程创建的主要事件。（P44）\http://www.wendangwang.com/doc/5b1382aa95388e89b25772fbpar\par【解】\par\par（1）用户登录  在分时系统中，用户在终端键入登录命令后，若是合法用户，系统将为该终端用户建立一个进程，并插入到就绪队列中。\par\par（2）作业调度  批处理程序中，作业调度程序按一定的算法调度到某个作业时，就将该作业装入内存，为它分配必要的资源，并立即为其创建进程，插入就绪队列中。\par\par（3）提供服务  运行中用户程序提出某种请求，系统专门创建一个进程来提供用户所需服务。\par\par（4）应用请求  应用进程自己创建一个进程，使自己和新进程以并发运行方式完成特定任务。\par\par12、试说明引起进程被撤消的主要事件。\par\par13、在创建一个进程时所要完成的主要工作是什么？（P44）\par\par【解】需完成的主要工作有：\par\par（1）申请空白PCB ；\par\par（2）为新进程分配资源；\par\par（3）初始化PCB ，其中包括：\par\par  初始化标识符信息。将系统分配的标识符、父进程标识符填入新PCB中；\par\par  初始化处理机状态信息。使程序计数器指向程序入口地址，使栈指针指向栈顶；\par\par  初始化处理机控制信息。将进程状态设置为就绪或静止就绪，对于优先级通常设置为\par\par最低，除非用户提出高优先级要求。\par\par（4）将新进程插入就绪队列。\par\par14、在撤消一个进程时所要完成的主要工作是什么？\par\par15、试说明引起进程阻塞或被唤醒的主要事件是什么？（P46）\par\par16、进程在运行时，存在哪两种形式的制约？并举例说明之。\par\par17、为什么进程在进入临界区之前，应先执行“进入区”代码，在退出临界区后又执行“退出区”代码？（P50）\par\par【解】为了保证诸进程互斥进入自己的临界区，便可实现它们对临界资源的互斥访问。为此，每个进程在进入临界区之前应先对欲访问的临界资源进行检查，看它是否正被访问。如果此刻临界资源没被访问，则该进程便可进入临界区，对该资源进行访问，并设置它正被访问的标志；如果此刻该临界资源正被某进程访问，则本进程不能进入临界区。因此，必须在临界区前增加一段用于上述检查的代码http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb，把这段代码称为进入区。相应地，在临界区后面也要加上一段称为退出区的代码，用于将临界区正被访问的标志恢复为未被访问标志。\par\par \par\par18、同步机构应遵循哪些基本准则？为什么？（P50）\par\par【解】同步机构应遵循的基本准则有：\par\par（1）空闲让进\par\par无进程处于临界区时，相应的临界资源处于空闲状态，因而可允许一个请求进入临界区的进程立即进入自己的临界区，以有效利用临界资源。\par\par（2）忙则等待\par\par当已有进程进入自己的临界区时，意味着相应的临界资源正被访问，因而所有其他试图进入临界区的进程必须等待，以保证诸进程互斥地访问临界资源。\par\par（3）有限等待\par\par对要求访问临界资源的进程，应保证该进程能在有限时间内进入自己的临界区，以免陷入“死等”状态。\par\par（4）让权等待\par\par当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入“忙等”。\par\par19、试从物理概念上来说明记录型信号量wait和signal操作？（P51）\par\par【解】在记录型信号量机制中，S.value的初值表示系统中某类资源的数目，因而又称资源信号量，每次的wait操作，意味着进程请求一个单位的资源，因此描述为S.value：=S.value-1；当S.value&lt;0时，表示资源已分配完毕，因而进程调用block原语，进行自我阻塞，放弃处理机，并插入到信号量链表S.L中。可见，该机制遵循了让权等待准则。此时S.value的绝对值表示在该信号量链表中已阻塞进程的数目。每次signal操作，表示执行进程释放一个单位资源，故S.value：=S.value 1操作表示资源数目加1。若加1后仍是S.value&lt;=0则表示该信号量链表中，仍有等待该资源的进程被阻塞，故还要调用wakeup原语，将S.L链表中的第一个等待进程唤醒。如果S.value的初值为1，表示只允许一个进程访问临界资源，此时的信号量转化为互斥信号量。\par\par \par\par20、你认为整型信号量机制是否完全遵循了同步机构的四条准则？（P52）\par\par【解】在整型信号量机制中的http://www.wendangwang.com/doc/5b1382aa95388e89b25772fbwait操作，只要是信号量S&lt;=0,就会不断地测试，因此，该机制并未遵循“让权等待”的准则，而是使该进程处于“忙等”的状态。\par\par21、如何利用信号量机制来实现多个进程对临界资源的互斥访问？并举例说明之。\par\par22、试写出相应的程序来描述图2-17所示的前趋图。\par\par \par\par【解】(1)\par\parVar a,b,c,d,e,f,g,h; semaphore:=0,0,0,0,0,0,0,0;\par\parbegin\par\parparbegin\par\parbegin S1;signal(a);signal(b);end;\par\parbegin wait(a);S2;signal(c);signal(d);end;\par\parbegin wait(b);S3;signal(e); end;\par\parbegin wait(c);S4;signal(f);end;\par\parbegin wait(d);S5;signal(g);end;\par\parbegin wait(e);S6;singal(h);end;\par\parbegin wait(f);wait(g); wait(h); S7;end;\par\parparend\par\parend\par\par(2)\par\parVar a,b,c,d,e,f,g,h,i,j; semaphore:=0,0,0,0,0,0,0,0,0,0,0;\par\parbegin\par\parparbegin\par\parbegin S1;signal(a);signal(b);end;\par\parbegin wait(a);S2;signal(c);signal(d);end;\par\parbegin wait(b);S3;signal(e);signal(f);end;\par\parbegin wait(c);S4;signal(g);end;\par\parbegin wait(d);S5;signal(h);end;\par\parbegin wait(e);S6;singal(i);end;\par\par[此处图http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb片未下载成功]\par\par
[此处图片未下载成功]\par\par
begin wait(f);S7;signal(j);end;\par\parbegin wait(g); wait(h);wait(i);wait(j); S8;end;\par\parparend\par\parend\par\par23、在生产者―消费者问题中，如果缺少了signal(full)或 signal(empty)，对执行结果会有什么影响？\par\par【解】在生产者―消费者问题中，如果缺少了signal(full) ，那么消费者会认为生产者没有生产而阻塞，而生产者会不断生产，直到empty为0后阻塞，然后两个进程陷入“死等”状态。\par\par如果缺少了signal(empty)开始两进程可同步运行。但当empty为0 时生产者会因此而阻塞，然后消费者进程继续运行直到full也为0阻塞，然后两个进程陷入“死等”状态。\par\par24、在生产者―消费者问题中，如果将两个wait操作即wait(full)和wait(mutex)互换位置，或者将signal(mutex)与signal(full)互换位置，结果会如何？\par\par【解】如果将wait(full)和wait(mutex)互换位置，则如果consumer先进入临界区，就会一直等待full，但由于没有signal(mutex) ，producer将无法进入临界区而等待，则两个进程相互等待，陷入死锁。\par\par如果signal(full)与signal (mutex)互换位置,则会使full的值不再是等待的consumer进程数目。\par\parvar mutex,empty,full:semaphore:=1,n,0;\par\parbuffer:array[0, ,n-1]of  item;         in,out:integer:=0,0;\par\parBegin\par\parparbegin\par\parproducer:\par\parbegin\par\parrepeat\par\par  \par\parproducer an item in nextp;\par\phttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbar  \par\parwait(mutex);//前2句颠倒则死锁\par\parwait(empty);\par\parbuffer(in):=nextp;\par\parin:=(in 1)mod n;\par\parsignal(full); //后2句颠倒不死锁\par\parsignal(mutex);\par\paruntil false;\par\parend\par\parconsumer:\par\parbegin\par\parrepeat\par\parwait(full);\par\parwait(mutex);\par\parnextc:=buffer(out);\par\parout:=(out 1)mod n;\par\parsignal(mutex);\par\parsignal(empty);\par\parconsume the item in nextc;\par\paruntil false;\par\parend\par\parParend\par\parend\par\par由于V操作是释放资源，因此对调V操作的次序无关紧要。\par\par而对调P操作的次序则可能导致死锁。\par\par这时因为对调P操作后，有可能出现这样一种特殊情况：在某一时刻缓冲池中已装满了产品且缓冲池中无进程工作（这时信号量full的值为n，信号量empty的值为0，信号量mutex的值为1），若系统此时调度生产者进程运行，生产者进程又生产了一个产品，它执行P(mutex)并顺利进入临界区（这时mutex值为0），随后它执行p(empty)时因没有空闲缓冲区而受阻等待，等待消费者进程进入缓冲池取走产品以释放出缓冲区；\par\par消费者进程执行p(full)后再执行p(mutex)时，因缓冲池被生产者进程占据而无法进入。 这样就形成了生产者进程在占有临界资源的情况下，等待消费者进程取走产品，而消费者进程又无法进入临界区取走产品的僵局，此时两进程陷入死锁。\par\par \par\par25、我们为某临界资源设置一把锁W，当W=1时表示关锁；当W=0时表示锁已打开。试写出开锁和关锁原语，并利用它们去实现互斥。\par\par【解】我们http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb采用一个变量W作为“锁”，代表某个临界资源的状态，W=0（false,锁已打开）表示该资源未用，W=1（true，关锁）表示该资源正被使用。同时，用一段程序作为开锁原语，用另一段程序作为关锁原语，要进入临界区的进程首先要执行关锁原语，当它退出临界区时，要执行开锁原语。从而实现对临界区的互斥控制。两个原语的作用是：\par\par加锁原语lock\par\par测试W是否为0\par\par若W=0，让W=1\par\par若W=1，继续测试\par\par开锁原语unlock\par\par使W=0\par\par可见，加锁原语首先要判断临界区中有无进程，若W=0，表示无进程进入临界区，它可以马上进入，并立即将W置为1，同时禁止其他进程进入。若W=1，表示已经有进程进入，它只得等待。这种机构简单方便，但存在CPU的时间浪费，因为等待进入临界区的进程将不断循环测试W，等待W变为0。\par\par26、试修改下面生产者-消费者问题解法中的错误：\par\parproducer:\par\parbegin\par\parrepeat\par\par \par\parproduce an item in nextp;\par\parwait(mutex);\par\parwait(full);\par\parbuffer(in):=nextp;\par\parsignal(mutex);\par\paruntil false;\par\parend\par\parconsumer:\par\parbegin\par\parrepeat\par\parwait(mutex);\par\parwait(empty);\par\parnextc:=buffer(out);\par\parout:=out 1;\par\parsignal(mutex);\par\parconsume item in nextc;\par\paruntil false;\par\parend\par\par修改为：\par\parproducer:\par\parbegin\par\parrepeat\par\parproduce an item in nextp;\par\parwaithttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fb (empty);\par\parwait (mutex);\par\parbuffer (in): =nextp;\par\parin:=(in 1) mod n;\par\parsignal (mutex);\par\parsignal (full)\par\paruntil false;\par\parend\par\parconsumer：\par\parbegin\par\parrepeat\par\parwait (full);\par\parwait(mutex);\par\parnextc:=buffer(out);\par\parout:=(out 1) mod n;\par\parout:=out 1;\par\parsignal(mutex);\par\parsignal(empty);\par\parconsume item in nextc;\par\paruntil false\par\parend\par\par27、试利用记录型信号量机制写出一个不会出现死锁的哲学家进餐问题的算法。\par\par28、在测量控制系统中的数据采集任务时，把所采集的数据送往一单缓冲区；计算任务从该单缓冲区中取出数据进行计算。试写出利用信号量机制实现两任务共享单缓冲区的同步算法。\par\par【解】算法如下：\par\parVar mutex, empty, full: semaphore: =1,1,0;\par\parbuffer: item;\par\parbegin\par\parparbegin\par\parReceive:\par\parbegin\par\parrepeat\par\parWait(empty);\par\parWait(mutex);\par\parbuffer: =nextp;\par\parSignal(mutex);\par\parSignal(full);\par\paruntil false\par\parend\par\par \par\parGet:\par\parbegin\par\parrepeat\par\parWait (full);\par\parWait (mutex);\par\parhttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbnextp: =buffer;\par\parSignal (mutex);\par\parSignal (empty);\par\paruntil false\par\parend\par\parparend\par\parend\par\par29、画图说明管程由哪几部分组成？（P56）为什么要引入条件变量？（P57）\par\par【解】如图：\par\par[此处图片未下载成功]\par\par
通常，由于等待的原因可能有多个，为了区别它们，因此引入条件变量。\par\par \par\par
30、如何利用管程来解决生产者―消费者问题？（P60）\par\par【解】首先为它们建立一个管程，描述如下：\par\parType  producer-consumer=monitor\par\parvar in, out, count: integer;\par\parbuffer: array[0,-----,n-1] of item;\par\parnotfull,notempty:condition;\par\parprocedure entry put(item)\par\parbegin\par\parif count&gt;=n then notfull.wait;\par\parbuffer(in):=nextp;\par\parin:=(in 1) mod n;\par\parcount:=count 1;\par\parif notempty.queue then notempty.signal;\par\parend\par\parprocedure entry get(item)\par\parbegin\par\parif count&lt;=0 then notempyt.wait;\par\parnextc:=buffer(out);\par\parout:=(out 1) mod n;\par\parcount:=count-1;\par\parif notfull.queue then notfull.signal;\par\parend\par\parbegin in:=out:=0; count:=0; end\phttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbar\par生产者和消费者可描述为：\par\parproducer: begin\par\parrepeat\par\parproduce an item in nextp;\par\parPC.put(item);\par\paruntil false;\par\parend\par\parconsumer:  begin\par\parrepeat\par\parPC.get(item);\par\parconsume the item in nextc\par\paruntil false;\par\parend\par\par \par\par
31、什么是AND信号量？试利用AND信号量写出生产者―消费者问题的解法。\par\par【解】AND信号量是指：将进程在整个运行过程中所需的所有临界资源一次性地全部分配给进程，待该进程使用完后再一起释放。只要尚有一个资源未能分配给该进程，其他所有可能为之分配的资源，也不分配给他，即：对若干临界资源分配，采取原子操作方式，要么全部分配到进程，要么一个也不分配。叫AND信号量。\par\par解法如下：\par\parvar mutex,empty,full:semaphore:=1,n,0;\par\parbuffer: array[0,---,n-1]of item;\par\parin,out:integer:=0,0;\par\parbegin\par\parparbegin\par\parproducer: begin\par\parrepeat\par\parproduce an item in nextp\par\parSwait(empty,mutex);\par\parbuffer(in):=nextp;\par\parin:=(in 1)mod n;\par\parSsignal(mutex,full);\par\paruntil false;\par\parend\par\parconsumer: begin\par\parrepeat\par\parSwait(full,mutex);\par\parnextc:=buffer(out);\par\parout:=(out 1)modhttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fb n;\par\parSsignal(mutex,empty);\par\parconsume the item in nextc;\par\paruntil false\par\parend;\par\par \par\par32、什么是信号量集？试利用信号量集写出读者-写者问题的解法。\par\par33、试比较进程间的低级与高级通信工具。（P65）\par\par34、当前有哪几种高级通信机制？（P65）\par\par【解】共享存储器系统，消息传递系统，管道通信系统。\par\par35、消息队列通信机制有哪几方面功能？（P66）\par\par【解】发送进程利用send原语，将消息直接发送给接收进程；接收进程利用receive原语接收消息。\par\par36、为什么要在OS中引入线程？（P72）\par\par37、试说明线程具有哪些属性？（P73）\par\par
38、试从调度性、并发性、拥有资源及系统开销几个方面，对进程和线程进行比较。\par\par【解】\par\par（1）调度性  在传统的OS中，拥有资源的基本单位和独立调度、分派的基本单位都是进程。而在引入线程的OS中，则把线程作为调度和分派的基本单位，而把进程作为资源拥有的基本单位，使传统进程的两个属性分开，线程便能轻装运行，从而显著提高系统并发程度。在同一进程中，线程的切换不会引起进程切换，在由一个进程中的线程切换到另一个进程中的线程时，将会引起进程切换。\par\par（2）并发性 多线程的操作系统中，不仅进程可以并发执行，而且一个进程的多个线程也可并发执行。从而能更有效的使用系统资源和提高系统吞吐量。\par\par（3）拥有资源 进程是拥有资源的独立单位。线程自己使不拥有系统资源，但可访问隶属进程的资源。\par\par（4）系统开销 在创建和撤消进程时，系统要为之分配或回收资源，所以系统开销要显著大于在创建和撤消线程的开销。在进行进程切换时，涉及到整个当前进程CPU环境的保存以及新被调度运行的进程的CPU环境的设置。而线程切换只须保存和设置少量寄存器的内容，并不涉及存储器管理方面的操作。可见，进程切换的开销也远大于线程切换的开销。此外，由于同一进程中的多个线程具有相同http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb的地址空间，致使它们之间的同步和通信的实现也变得比较容易。\par\par \par\par39、为了在多线程OS中实现进程之间的同步与通信，通常提供了哪几种同步机制？\par\par【解】互斥锁，条件变量，计数信号量，多读、单写锁。\par\par40、用于实现线程同步的私用信号量和公用信号量之间有何差异？（P76）\par\par41、何谓用户级线程和内核支持线程？（P77）\par\par【解】用户级线程仅存在于用户级中，它的创建、撤消和切换都不利用系统调用实现，与内核无关，相应的，内核也不知道有用户级线程存在。\par\par内核级线程依赖于内核，无论用户进程中的线程还是系统进程中的线程，其创建、撤消、切换都由内核实现。在内核中保留了一张线程控制块，内核根据控制块感知线程的存在并对其进行控制。\par\par比较：\par\par（1）线程的调度与切换速度  内核支持线程的调度和切换与进程的调度和切换十分相似。例如，在线程调度时的调度方式，同样也是抢占方式和非抢占方式两种。在线程的调度算法上，也同样可采用时间片轮转、优先权算法等。当由线程调度选中一个线程后，再将处理机分配给它。当然，线程在调度和切换上所花费的开销要比进程的小得多。对于用户级线程的切换，通常是发生在一个应用程序的多线程之间，这时，不仅无须通过中断进入OS的内核，而且切换的规则也远比进程调度和切换的规则简单。例如，当一个线程阻塞后会自动切换到下一个具有相同功能的线程，因此，用户级线程的切换速度特别快。\par\par（2）系统调用   当传统的用户进程调用一个系统调用时，要由用户态转入核心态，用户进程将被阻塞。当内核完成系统调用而返回时，才将该进程唤醒，继续执行。而在用户级线程调用一个系统调用时，由于内核并不知道有该用户级线程的存在，因而把系统调用看作是整个进程的行为，于是使该进程等待，而调度另一个进程执行，同样是在内核完成系统调用而返回时，进程才能继续执行。如果系统中设置的是内核支持线程，则调度是以线程为单位。当一个线程调用一个系统调用时，内核把系统调用只看作是该线程的行为，因而阻塞该线程，于是可以再调度该进程中的其他线程执行。\par\par（3）线程执行时间   对于只设置了用户级http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb线程的系统，调度是以进程为单位进行的。在采用轮转调度算法时，各个进程轮流执行一个时间片，这对诸进程而言，似是公平。但假如在进程A中包含了一个用户级线程，而进程B中含有100个线程，这样，进程A中线程的运行时间，\par\par
将是进程B中各线程运行时间的100倍；相应地，速度就快100倍。假如系统中设置的是内核支持线程，其调度是以线程为单位进行的，这样，进程B可以获得的CPU时间是进程A的100倍，进程B可使100个系统调用并发工作。\par\par42、试说明用户级线程的实现方法。（P77）\par\par43、试说明内核支持线程的实现方法。（P77）\par\par \par\par如何保证诸进程互斥地访问临界资源？\par\par答：为了互斥地访问临界资源，系统必须保证进程互斥地进入临界区。为此，必须在临界区前增加一段称为进入区的代码，以检查是否有其他进程已进入临界区使用临界资源。若有，则进程必须等待；否则，允许进程进入临界区，同时设置标志表示有进程正在临界区内。同样地，在临界区后必须增加一段称作退出区的代码，用于将已有进程进入临界区访问临界资源的标志改为无进程进入临界区使用临界资源。进入区、退出区具体可用多种同步机制实现，如锁、信号量机制等。\par\par \par\par何谓“忙等”？它有什么缺点？\par\par答：所谓“忙等”是指“不让权”的等待，即进程因某事件的发生而无法继续执行时，它仍占有CPU，并通过不断地执行循环测试指令来等待该事件的完成。\par\par“忙等”的主要缺点是浪费CPU的时间，另外，它还可能引起预料不到的后果。例如，考虑某个采取高优先权优先调度原则的系统，目前有2个进程A和B共享某个临界资源，A的优先权较高，B的优先权较低，且B已处于临界区内，而A欲进入自己的临界区，则A、B都不可能继续向前推进，陷入“死等”状态。\par\par \par\par进程之间存在着哪几种制约关系？各是什么原因引起的？下列活动分别属于哪种制约关系？\par\par（1） 若干同学去图书馆借书；\par\par（2） 两队举行篮球比赛；\par\par（3） 流水线生产的各道工序；\par\par（4） 商品生产和社会消费。\par\pahttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbr答：进程之间存在着直接制约和间接制约两种制约关系，其中直接制约（同步）是由于进程间的相互合作而引起的，而间接制约（互斥）则是由于进程间共享临界资源而引起的。\par\par（1） 若干同学去图书馆借书是间接制约，其中书是临界资源。\par\par（2） 两队举行篮球比赛是间接制约，其中篮球是临界资源。\par\par（3） 流水线生产的各道工序是直接制约，各道工序间需要相互合作，每道工序的开始都依赖\par\par于前一道工序的完成。\par\par（4） 商品生产和社会消费是直接制约，两者也需要相互合作：商品生产出来后才可以被消费；\par\par商品被消费后才需要再生产。\par\par
第二部分 选择题\par\par1．在进程管理中，当  C  时，进程从阻塞状态变为就绪状态。\par\parA.进程被进程调度程序选中    B.等待某一事件\par\parC.等待的事件发生      D.时间片用完\par\par2．分配到必要的资源并获得处理机时的进程状态是  B  。\par\parA.就绪状态   B.执行状态   C.阻塞状态   D.撤消状态\par\par3．P、V操作是  A  。\par\parA.两条低级进程通信原语    B.两组不同的机器指令\par\parC.两条系统调用命令     D.两条高级进程通信原语\par\par4．设系统中有n（n&gt;2）个进程，且当前不在执行进程调度程序，试考虑下述4种情况， 不可能发生的情况是  A  。\par\parA．没有运行进程，有2个就绪进程，n个进程处于等待状态。\par\parB．有1个运行进程，没有就绪进程，n-1个进程处于等待状态。\par\parC．有1个运行进程，有1个就绪进程，n-2个进程处理等待状态。\par\parD．有1个运行进程，n-1个就绪进程，没有进程处于等待状态。\par\par5．若P、V操作的信号量S初值为2，当前值为-1，则表示有  B  等待进程。\par\parA. 0个    B. 1个    C. 2个    D. 3个\par\par6．进程的三个基本状态在一定条件下可以相互转化，进程由就绪状态变为运行状态的条件是    D 。\http://www.wendangwang.com/doc/5b1382aa95388e89b25772fbpar\parA.时间片用完       B.等待某事件发生\par\parC.等待的某事件已发生     D.被进程调度程序选中\par\par7．进程的三个基本状态在一定条件下可以相互转化，进程由运行状态变为阻塞状态的条件是   B  。\par\parA.时间片用完       B.等待某事件发生\par\parC.等待的某事件已发生     D.被进程调度程序选中\par\par8．下列的进程状态变化中， C 变化是不可能发生的。\par\parA．运行 就绪  B．运行 就绪  C．等待 运行  D．等待 就绪\par\par9．一个运行的进程用完了分配给它的时间片后，它的状态变为   A  。\par\parA.就绪    B.等待    C.运行    D.由用户自己确定\par\par10．用V操作唤醒一个等待进程时，被唤醒进程的状态变为   B   。\par\parA.等待    B.就绪    C.运行    D.完成\par\par11．操作系统通过  B  对进程进行管理。\par\parA. JCB    B. PCB    C. DCT    D. CHCT\par\par12．用P、V操作可以解决  A 互斥问题。\par\parA. 一切   B. 某些   C. 正确    D. 错误\par\par13．一个进程被唤醒意味着  D  。\par\parA. 该进程重新占有了CPU    B. 它的优先权变为最大\par\parC. 其PCB移至等待队列队首   D. 进程变为就绪状态\par\par14．多道程序环境下，操作系统分配资源以 C  为基本单位。\par\parA. 程序   B. 指令   C. 进程   D. 作业\par\par15. 从静态的角度看，进程是由（A）、（B）、（C）三部分组成的，其中（C）是进程存在的唯一标志。当几个进程共享（A）时，（A）应当是可重入代码。\par\parA：程序段；\par\par
B：数据段；\par\parC：PCB；\par\par16. 进程的三个基本状态是（A）、（B）、（C）。由（A）到（B）是由进程调度所引起的；由（B）到（C）是正在执行的进程发生了某http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb事件，使之无法继续执行而引起的。\par\parA：就绪；\par\parB：执行；\par\parC：阻塞；\par\par17. 正在等待他人释放临界资源的进程处于（A）状态，已分配到除CPU外的所有资源的进程处于（B）状态，已获得CPU的进程处于（C）状态。\par\parA：阻塞；\par\parB：就绪；\par\parC：执行；\par\par18. 下列进程状态转换中，绝对不可能发生的状态转换是（A）；一般不会发生的状态转换是（B）。 A：就绪 阻塞；\par\parB：阻塞 执行；\par\par19. 在一个单处理机系统中，存在5个进程，最多可有（A）个进程处于就绪队列；如果这5个进程中有一个系统进程IDLE（也叫空转进程，因为它只是不断循环地执行空语句），则最多可有（B）个进程处于阻塞状态。\par\parA，B：（1）5；（2）4；（3）3；（4）2；（5）1；（6）0。\par\par20. 正在执行的进程由于其时间片用完被暂停执行，此时进程应从执行状态变为（A）状态；处于静止阻塞状态的进程，在进程等待的事件出现后，应变为（B）状态；若进程正处于执行状态时，因终端的请求而暂停下来以便研究其运行情况，这时进程应转变为（C）状态，若进程已处于阻塞状态；则此时应转变为（D）状态。\par\parA：（1）静止阻塞；（2）活动阻塞；（3）静止就绪；（4）活动就绪；（5）执行。\par\parB：（1）静止阻塞；（2）活动阻塞；（3）静止就绪；（4）活动就绪；（5）执行。\par\parC：（1）静止阻塞；（2）活动阻塞；（3）静止就绪；（4）活动就绪；（5）执行。\par\parD：（1）静止阻塞；（2）活动阻塞；（3）静止就绪；（4）活动就绪；（5）执行。\par\par21. 为使进程由活动就绪转变为静止就绪，应利用（A）原语；为使进程由执行状态转变为阻塞状态，应利用（B）原语；为使进程由静止就绪变为活动就绪，应利用（C）原语；从阻塞状态变为就绪状态应利用（D）原语。\par\parA：（1）create；（2）suspend；（3）active；（4）block；（5）wakeup。\par\parB：（1）create；（2）susphttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbend；（3）active；（4）block；（5）wakeup。\par\parC：（1）create；（2）suspend；（3）active；（4）block；（5）wakeup。\par\parD：（1）create；（2）suspend；（3）active；（4）block；（5）wakeup。\par\par22. 在分时系统中，导致进程创建的典型事件是（A）；在批处理系统中，导致进程创建的典型事件是（B）；由系统专门为运行中的应用进程创建新进程的事件是（C）。在创建进程时，（D）不是创建所必需的步骤。\par\parA：（1）用户注册；（2）用户登录；（3）用户记账；（4）用户通信。\par\parB：（1）作业录入；（2）作业调度；（3）进程调度；（4）中级调度。\par\parC：（1）分配资源；（2）进行通信；（3）共享资源；（4）提供服务。\par\parD：（1）为进程建立PCB；（2）为进程分配内存等资源；（3）为进程分配CPU；（4）将进程插入就绪队列。\par\par23. 从下面对临界区的论述中，选出一条正确的论述。\par\par（1）临界区是指进程中用于实现进程互斥的那段代码。\par\par
（2）临界区是指进程中用于实现进程同步的那段代码。\par\par（3）临界区是指进程中用于实现进程通信的那段代码。\par\par（4）临界区是指进程中用于访问共享资源的那段代码。\par\par（5）临界区是指进程中访问临界资源的那段代码。\par\par24. 进程A和B共享同一临界资源，并且进程A正处于对应的临界区内执行。请从下列描述中选择一条正确的描述。C\par\parA. 进程A的执行不能被中断，即临界区的代码具有原子性。\par\parB. 进程A的执行能被中断，但中断A后，不能将CPU调度给进程B。\par\parC. 进程A的执行能被中断，而且只要B进程就绪，就可以将CPU调度给进程B。\par\parD. 进程A的执行能被中断，而且只要B进程就绪，就必定将CPU调度给进程B。\par\par25. （A）是一种只能由wait和signal操作所改变的整型变量，（A）可用于实现进程的（B）和（C），（B）是排他http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb性访问临界资源。\par\parA：（1）控制变量；（2）锁；（3）整型信号量；（4）记录型信号量。\par\parB：（1）同步；（2）通信；（3）调度；（4）互斥。\par\parC：（1）同步；（2）通信；（3）调度；（4）互斥。\par\par26. 对于记录型信号量，在执行一次wait操作时，信号量的值应当（A），当其值为（B）时，进程阻塞。在执行signal操作时，信号量的值应当为（C），当其值为（D）时，应唤醒阻塞队列中的进程。\par\parA：（1）不变；（2）加1；（3）减1；（4）加指定数值；（5）减指定数值。\par\parB：（1）大于0；（2）小于0；（3）大于等于0；（4）小于等于0.\par\parC：（1）不变；（2）加1；（3）减1；（4）加指定数值；（5）减指定数值。\par\parD：（1）大于0；（2）小于0；（3）大于等于0；（4）小于等于0.\par\par27. 用信号量S实现对系统中4台打印机的互斥使用，S.value的初值应设置为（A），若S.value的初值为-1，则表示S.L队列中有（B）个等待进程。\par\parA：（1）1；（2）0；（3）-1；（4）4；（5）-4\par\parB：（1）1；（2）2；（3）3；（4）4；（5）5；（6）6；（7）0。\par\par28. 设有10个进程共享一个互斥段，如果最多允许有1个进程进入互斥段，则所采用的互斥信号量初值应设置为（A），而该信号量的取值范围为（B）；如果最多允许有3个进程同时进入互斥段，则所采用的互斥信号量初值应设置为（C）。\par\parA：（1）10；（2）；3；（3）1；（4）0。\par\parB：（1）0~1；（2）-1~0；（3）1~-9；（4）0~-9。\par\parC：（1）10；（2）；3；（3）1；（4）0。\par\par29. 在生产者-消费者问题中，应设置互斥信号量mutex、资源信号量full和empty。它们的初值应分别为（A）、（B）、（C）。\par\parA：（1）0；（2）1；（3）-1；（4）-n；（5） n。\par\parB：（1）0；（2）1；（3）-1；（4）-n；（5） n。\par\http://www.wendangwang.com/doc/5b1382aa95388e89b25772fbparC：（1）0；（2）1；（3）-1；（4）-n；（5） n。\par\par30. 对生产者-消费者问题的算法描述如下，请选择正确的答案编号填入方框中。\par\par
Producer: begin\par\parRepeat\par\par(A);\par\par(B);\par\parBuffer(in):=m;\par\parIn:=(in 1)mod n;\par\par(C);\par\par(D);\par\parUntil false\par\parEnd\par\parConsumer: begin\par\parRepeat\par\par(E);\par\par(B);\par\parM:=buffer(out);\par\parOut:=(out 1)mod n;\par\par(C);\par\par(F);\par\parUntil false\par\parend A: (1)wait(mutex); (2)signal(mutex); (3)wait(empty); (4)signal(full);\par\par(5)wait(full); (6)signal(empty)。 B: (1)wait(mutex); (2)signal(mutex); (3)wait(empty); (4)signal(full);\par\par(5)wait(full); (6)signal(empty)。 C: (1)wait(mutex); (2)signal(mutex); (3)wait(empty); (4)signal(full);\par\par(5)wait(full); (6)signal(empty)。 D: (1)wait(mutex); (2)signal(mutex); (3)wait(empty); (4)signal(full);\par\par(5)wait(full); (6)signal(empty)。\par\parE: (1)wait(mutex); (2)signal(mutex); (3)wait(empty); (4)signal(full); (5)wait(full); (6)sighttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbnal(empty)。\par\parF: (1)wait(mutex); (2)signal(mutex); (3)wait(empty); (4)signal(full); (5)wait(full); (6)signal(empty)。\par\par31. 试选择（A）~（D），以便能正确地描述图2.12所示的前趋关系。\par\parVar a,b,c: semaphore:=0,0,0;\par\parBegin\par\parParbegin\par\parBegin S1; (A); end;\par\parBegin S2; (B); end;       Begin           Wait(a); wait(b); S3; (C);\par\parEnd       Begin (D); S4 end\par\parParend End\par\par[此处图片未下载成功]\par\par

A: (1)signal(a); (2)signal(b); (3)wait(c); (4)signal(c)。 B: (1)signal(a); (2)signal(b); (3)wait(c); (4)signal(c)。 C: (1)signal(a); (2)signal(b); (3)wait(c); (4)signal(c)。 D: (1)signal(a); (2)signal(b); (3)wait(c); (4)signal(c)。\par\par32． 有两个程序：A程序按顺序使用CPU10秒、设备甲5秒、CPU5秒、设备乙\par\par10秒、CPU10秒；B程序按顺序使用设备甲10秒、CPU10秒、设备乙5秒、CPU5\par\par秒、设备乙10秒。在顺序环境下，执行上述程序，CPU的利用率约为（A）。若\par\par允许它们采用非抢占方式并发执行，并且不考虑切换等开销，则CPU的利用率约\par\par为（B）。\par\parA（1）30%；（2）40%；（3）50%；（4）60%；（5）70%；（6）80%；（7）90%。\par\parB（1）30%；（2）40%；（3）50%；（4）60%；（5）70http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb%；（6）80%；（7）90%。\par\par33. 从下面的叙述中选出一条正确的叙述：\par\par（1）操作系统的一个重要概念是进程，不同的进程所执行的代码也不同。\par\par（2）操作系统通过PCB来控制和管理进程，用户进程可从PCB中读出与本身运\par\par行状态相关的信息。\par\par（3）当进程由执行状态变为就绪状态时，CPU现场信息必须被保存在PCB中。\par\par（4）当进程申请CPU得不到满足时，它将处于阻塞状态。\par\par（5）进程是可与其他程序并发执行的程序在一个数据集合上的运行过程，所以\par\par程序段是进程存在的唯一标志。\par\par34. 从下面的叙述中选出4条正确的叙述：\par\par（1）一个进程的状态发生变化总会引起其它一些进程的状态发生变化。\par\par（2）进程被挂起（suspend）后，状态变为阻塞状态。\par\par（3）信号量的初值不能为负数。\par\par（4）线程是CPU调度的基本单位，但不是资源分配的基本单位。\par\par（5）在进程对应的代码中使用wait、signal操作后，可以防止系统发生死锁。\par\par（6）管程每次只允许一个进程进入。\par\par（7）wait、signal操作可以解决一切互斥问题。\par\par（8）程序的顺序执行具有不可再现性。\par\par35. 在引入线程的操作系统中，资源分配和调度的基本单位是（A），CPU调度和\par\par分配的基本单位是（B）。\par\parA：（1）程序；（2）进程；（3）线程；（4）作业。\par\parB：（1）程序；（2）进程；（3）线程；（4）作业。\par\par36. 在三种基本类型的操作系统中，都设置了（A），在批处理系统中还应设置（B）；\par\par在分时系统中除了（A）以外，通常还设置了（C），在多处理机系统中则还需设\par\par置（D）。\par\parA：（1）剥夺调度；（2）作业调度；（3）进程调度；（4）中级调度；（5）多处理\par\par机调度。\par\parB：（1）剥夺调度；（2）作业调度；（3）进程调度；（4）中级调度；（5）多处理\pahttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbr\par机调度。\par\parC：（1）剥夺调度；（2）作业调度；（3）进程调度；（4）中级调度；（5）多处理\par\par机调度。\par\parD：（1）剥夺调度；（2）作业调度；（3）进程调度；（4）中级调度；（5）多处理机调度。\par\par \par\par
37. 在面向用户的调度准则中，（A）是选择实时调度算法的重要准则，（B）是选\par\par择分时系统中进程调度算法的重要准则，（C）是批处理系统中选择作业调度算法\par\par的重要准则，而（D）准则则是为了照顾紧急作业用户的要求而设置的。\par\parA：（1）响应时间快；（2）平均周转时间短；（3）截止时间的保证；（4）优先权\par\par高的作业能获得优先服务；（5）服务费低。\par\parB：（1）响应时间快；（2）平均周转时间短；（3）截止时间的保证；（4）优先权\par\par高的作业能获得优先服务；（5）服务费低。\par\parC：（1）响应时间快；（2）平均周转时间短；（3）截止时间的保证；（4）优先权\par\par高的作业能获得优先服务；（5）服务费低。\par\parD：（1）响应时间快；（2）平均周转时间短；（3）截止时间的保证；（4）优先权高的作业能获得优先服务；（5）服务费低。\par\par38. 支持多道程序设计的操作系统，在运行过程中不断地选择新进程运行来实现\par\parCPU的共享，但其中（A）不是引起操作系统选择新进程的直接原因。\par\parA：（1）执行进程的时间片用完；（2）执行进程出错；（3）执行进程要等待某一\par\par事件发生；（4）有新进程进入就绪队列。\par\par39、一般情况下，互斥信号量的初值为   B        。\par\parA. 0     B. 1    C. 2    D. 4\par\par第三部分 是非题\par\par1．进程是动态的概念          （对）\par\par2．进程执行需要处理机        （对）\par\par3．进程是有生命期的          （对）\par\par4．进程是指令的集合          （错）\par\par5．操作系统的一重http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb要概念是进程，因此不同进程所执行的代码也一定不同 （错）\par\par7．操作系统用PCB管理进程，用户进程可以从PCB中读出与本身运行状况有关\par\par的信息                                                         （错）\par\par8．进程同步是指某些进程之间在逻辑上的相互制约关系                 （对）\par\par9.在一个只有单个CPU的计算机中，进程不能并行操作。\par\par错。一个进程在利用CPU运行，另一个进程可以同时进行I/O操作，它们是并行\par\par的。\par\par10.线程可以分为内核级（Kernel Thread）和用户级（User Thread）两种，操\par\par作系统不可以直接调度用户级的线程。对。\par\par第四部分 填空题\par\par1．信号量的物理意义是当信号量值大于零时表示 可用资源的数目 ；当信号量\par\par值小于零时，其绝对值为 因请求该资源而被阻塞的进程数目  。\par\par2．临界资源的概念是 一次仅允许一个进程访问的资源 ，而临界区是指  进程中访问临界资源的那段程序代码 。\par\par3．进程在运行过程中有三种基本状态，它们是 运行、就绪、等待。\par\par4．进程主要由 程序段、数据段、PCB  三部分内容组成，其中 PCB 是进程存在\par\par的唯一标志。而 程序段 部分也可以为其他进程共享。\par\par5．系统中各进程之间逻辑上的相互制约关系称为 进程同步  。\par\par6．若一个进程已进入临界区，其他欲进入临界区的进程必须 等待。\par\par7．将进程的 PCB 链接在一起就形成了进程队列。\par\par
8．用P、V操作管理临界区时，任何一个进程在进入临界区之前应调用 P 操作，\par\par退出临界区时应调用  V 操作。\par\par9．在多道程序系统中，进程之间存在着的不同制约关系可以划分为两类：同步\par\par与 互斥 。   同步 指进程间具有的一定逻辑关系； 互斥  是指进程间在使用\par\par共享资源方面的约束关系。\pahttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbr\par10．程序顺序执行时有顺序性、封闭性 和可再现性的特点。\par\par11．有m个进程共享同一临界资源，若使用信号量机制实现对临界资源的互斥访\par\par问，则信号量值的变化范围是  1~ -（m-1） 。\par\par12．在一个单处理机系统中，若有5个用户进程，且假设当前时刻为用户态，则\par\par处于就绪状态的用户进程最多有  4 个，最少有 0  个。\par\par13、在单用户单任务环境下，用户独占全机，此时机内资源的状态，只能由运行\par\par程序的操作加以改变，此时的程序执行具有  封闭性   性和  可再现性  性特\par\par征。\par\par14、并发进程之间的相互制约，是由于它们的  共享资源  和  相互合作  而产\par\par生的，因而导致程序在并发执行时具有  间断性或异步性  特征。\par\par15、程序并发执行与顺序执行时相比产生了一些新特征，分别是     、   和   。\par\par间断性、失去封闭性、不可再现性\par\par16、引入进程的目的是    ，而引入线程的目的是     。使程序能正确地并发\par\par执行，以提高资源利用率和系统吞吐量；减少并发执行的开销，提高程序执行的\par\par并发程度。\par\par17、进程由   、   和   组成，其中   是进程存在的唯一标志。PCB、程序段、\par\par数据段、PCB\par\par18、进程最基本的特征是    和    ，除此之外，它还有   、   和   特征。\par\par动态性、并发性、独立特征、异步性、结构\par\par19、由于进程的实质是程序的一次执行，故进程有   的基本特征，该特征还表\par\par现在进程由    而产生，由    而执行，由    而消亡，即进程具有一定的生命\par\par期。动态性，创建，调度，撤销\par\par20、引入进程带来的好处是    和    。提高资源利用率，增加系统吞吐量\par\par21、当前正在执行的进程由于时间片用完而暂停执行时，该进程应转变为    状\par\par态；若因发生某种事件而不能继续执行时，应转为   http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb 状态；若应终端用户的请\par\par求而暂停执行时，它应转为    状态。就绪，阻塞，静止就绪\par\par22、用户为阻止进程继续运行，应利用     原语，若进程正在执行，应转为    状\par\par态；以后，若用户要恢复其运行，应利用    原语，此时进程应转为    状态。\par\par挂起；静止就绪；激活；活动就绪\par\par23、系统中共有5个用户进程，且当前CPU在用户态下执行，则最多可有    个\par\par用户进程处于就绪状态，最多可有    个用户进程处于阻塞状态；若当前在核心\par\par态下执行，则最多可有     个用户进程处于就绪状态，最多可有     个用户进\par\par程处于阻塞状态。4，4，5，5\par\par24、同步机制应遵循的准则：    、    、   和    。空闲让进、忙则等待、\par\par有限等待、让权等待\par\par25、在记录型信号量机制中，S.value&gt;0时的值表示    ；每次wait操作意味\par\par着    ，因此应将S.value     ，当S.value     时，进程应阻塞。可用的临\par\par界资源数量；申请一个临界资源；减1；小于0\par\par26、在记录型信号量机制中，每次signal操作意味着   ，因此应将\par\par
S.value     ，当S.value&lt;=0时，表示    ，此时应     。释放一个临界资源，\par\par加1，仍有请求该资源的进程被阻塞；唤醒相应阻塞队列中的首进程\par\par27、在利用信号量实现进程互斥时，应将    置于    和    之间。临界区，wait\par\par操作，signal操作\par\par28、在每个进程中访问   的那段代码称为临界区。为实现对它的共享，应保证\par\par进程   进入自己的临界区，为此，在每个进程的临界区前应设置    ，临界区\par\par后应设置     。临界资源，互斥，进入区，退出区\par\par29、进程通信的类型有   、   、   三类，其中   利用共享文件进行通信。共\par\par享存储器、消息http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb系统、管道通信、管道通信\par\par30、为实现消息缓冲队列通信，应在PCB中增加   、   、   三个数据项。消\par\par息队列首指针mq；消息队列互斥信号量mutex;消息队列资源信号量sm\par\par31. 在直接通信方式中，系统通常提供的两条通信原语如下，请选择适当的参数\par\par填入。\par\parSend((A),(B));\par\parReceive((C),(B));\par\parA：（1）sender；（2）receiver；（3）text；（4）message；（5）mailbox。\par\parB：（1）sender；（2）receiver；（3）text；（4）message；（5）mailbox。\par\parC：（1）sender；（2）receiver；（3）text；（4）message；（5）mailbox。\par\par32. 使用mail命令的信箱通信属于（A），因为信息是被发送到接收方的（B）中；\par\par使用write命令，实现的是（C）通信，因为信息是被发送到接收方的（D）中；\par\par使用共享文件进行通信的方式属于（E）通信。\par\parA：（1）共享存储器；（2）实时通信；（3）消息缓冲通信；（4）非实时通信；（5）\par\par管道通信。\par\parB：（1）消息缓冲队列；（2）内存；（3）信箱；（4）消息缓冲区；（5）屏幕；（6）\par\par共享存储器。\par\parC：（1）共享存储器；（2）实时通信；（3）消息缓冲通信；（4）非实时通信；（5）\par\par管道通信。\par\parD：（1）消息缓冲队列；（2）内存；（3）信箱；（4）消息缓冲区；（5）屏幕；（6）\par\par共享存储器。\par\parE：（1）共享存储器；（2）实时通信；（3）消息缓冲通信；（4）非实时通信；（5）管道通信。\par\par33、在采用用户级线程的系统中，OS进行CPU调度的对象是    ；在采用内核\par\par支持线程的系统中，CPU调度的对象是     。进程，线程\par\par34、线程之所以能减少并发执行的开销是因为    。线程基本http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb不拥有资源\par\par35、进程通信的常用方式有     直接通信        和   间接通信      等。\par\par36、如果P(S1)和P(S2)两个操作在一起，那么P操作的顺序至关重要，一个同\par\par步P操作与一个互斥P操作在一起时同步    P操作在互斥    P操作前。而两\par\par个V操作的次序无关紧要     。\par\par37、P(S)：表示申请一个资源    ； V(S)表示释放一个资源    。信号量的初\par\par值应该大于等于0    。\par\par38、P、V操作当为互斥   操作时，它们同处于同一进程；当为同步   操作时，\par\par则不在同一进程中出现。\par\par39、临界资源是指  系统中一次只允许一个进程使用的资源   ，而临界区是指       涉及到临界资源的代码段 。\par\par
40、I/O型进程是指   花费I/O 时间多于计算的进程   ，而CPU型进程是指               花费计算多于I/O 时间的进程    。\par\par41、当时间片轮转算法的时间片足够大时，这个算法就等同于FIFO  算法。\par\par42、P\V操作必须成对  出现，有一个P操作就一定有一个V操作      。\par\par43、临界资源是指  系统中一次只允许一个进程使用的资源   ，而临界区是指       涉及到临界资源的代码段     。\par\par
第五部分 解析题\par\par1.进程的定义是什么？它最少有哪几种状态？\par\par2.进程与线程的主要区别是什么？\par\par \par\par3、 什么是进程的互斥与同步？同步和互斥这两个概念有什么联系和区别？ 解：\par\par（1） 同步：两个事件的发生有着某种时序上的关系，进程间的同步关系是指系统中往往有几个进程共同完成一个任务；\par\par（2） 互斥是进程间的另外一种关系。由于各进程要共享资源。而有些资源往往要求排他性地使用；\par\par（3） 互斥是一种特殊的同步关系。\par\par \par\par4. 图给出了4个进程合作完成某一任务的前驱图，试说明这4http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb个进程间的同步关系，并用P、V操作描述它。\par\par \par\par解：图说明任务启动后S1先执行。当S1结束后，S2、S3可以开始执行。S2、S3完成后，S4才能开始执行。为了确保这一执行顺序，设3个同步信号量b2、b3、b4分别表示进程S2、S3、S4是否可以开始执行，其初值均为0。进程同步描述如下：\par\par//可用两种方法来解决\par\par//S1不必判断能否开始\par\par//b2、b3、b4起初全部为0，表示都不可开始\par\parint b2=0;// 表示进程S2是否可以开始执行\par\parint b3=0;// 表示进程S3是否可以开始执行\par\parint b4=0;// 表示进程S4是否可以开始执行\par\par//也可分为b42、b43\par\parmain()\par\par{\par\parcobegin\par\parS1();\par\parS2();\par\parS3();\par\parS4();\par\parCoend\par\par}\par\par[此处图片未下载成功]\par\par

S1()\par\par{\par\par \par\parv(b2);\par\parv(b3);\par\par}\par\parS2()\par\par{\par\parp(b2);\par\par \par\parv(b4);  //v(b42)\par\par}\par\parS3()\par\par{\par\parp(b3);\par\par \par\parv(b4);  //v(b43)\par\par}\par\parS4()\par\par{//因为在S2及S3完成时均对b4做了v操作，因此这里要用两个p操作  p(b4);//p(b42)\par\parp(b4);//p(b43)\par\par \par\par}\par\par \par\par5. 桌上有一空盘，允许存放一只水果。爸爸可向盘中放苹果，也可向盘中放桔子，儿子专等吃盘中的桔子，女儿专等吃盘中的苹果。规定当盘空时一次只能放一只水果供吃者取用，请用P、V原语实现爸爸、儿子、女儿三个并发进程的同步。\phttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fbar\par解：设置3个信号量S、SO、SA，信号量S表示盘子是否为空，其初值为1；信号量SO表示盘中是否有桔子，其初值为0；信号量SA表示盘中是否有苹果，其初值为0。\par\par同步描述：\par\parint S=1;\par\parint SA=0;\par\parint SO=0;\par\parmain()\par\par{\par\parcobegin\par\parfather();\par\parson();\par\pardaughter();\par\parcoend\par\par}\par\par
father()\par\par{\par\parwhile(1)\par\par{\par\parp(S);//盘子是否空\par\par将水果放入盘中;\par\parif(放入的是桔子)v(SO);//变形\par\parelse  v(Sa) //很少有学生如此做！而这却是本题的关键\par\par}\par\par}\par\parson()\par\par{\par\parwhile(1)\par\par{\par\parp(SO);//盘子中有无桔子\par\par从盘中取出桔子;\par\parv(S);\par\par吃桔子;\par\par}\par\par}\par\pardaughter()\par\par{\par\parwhile(1)\par\par{\par\parp(SA);//盘子中有无苹果\par\par从盘中取出苹果;\par\parv(S);\par\par吃苹果;\par\par}\par\par}\par\par \par\par6. 在单处理机的分时系统中，分配给进程P的时间片用完后，系统进行切换，结果调度到的仍然是进程P。有可能出现上述情形吗？如果可能请说明理由。\par\par解：有可能出现上述情况。例如，若在进程P时间片用完后，被迫回到就绪队列时，就绪队列为空，这样进程P就是就绪队列中唯一的一个进程，于是调度程序选中的进程必然是进程P；又如在按优先级调度的系统中，就绪队列按进程优先级排列，在进程P时间片用完之后回到就绪队列时，若其优先级高于当前队列中的其他进程，则它将排在就绪队列之http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb首，从而再次被调度程序选中并投入运行。\par\par \par\par
7. 哲学家甲请哲学家乙、丙、丁到某处讨论问题，约定全体到齐后开始讨论问题；在讨论的间隙4位哲学家进餐，每人进餐时都需使用刀、叉各一把，餐桌上的布置如图。请用信号量及P、V操作说明这4位哲学家的同步、互斥过程。 解：在本题中，应设置4个信号量fork1、fork2、knife1、knife2，其初值均为1，分别表示资源叉1、叉2、刀1、刀2是否可用。同步描述如下： int fork1=1;\par\parint fork2=1;\par\parint knife1=1;\par\parint knife2=1;\par\parmain()\par\par{\par\parcobegin\par\parPa();\par\parPb();\par\parPc();\par\parPd();\par\parCoend\par\par}\par\parPa()\par\par{\par\parwhile(1)\par\par{\par\parp(knife1);\par\parp(fork1);\par\par进餐；\par\parv(knife1);\par\parv(fork1);\par\par讨论问题；\par\par}\par\par}\par\parPb()\par\par{\par\parwhile(1)\par\par{\par\parp(knife2);\par\parp(fork1);\par\par进餐；\par\parv(knife2);\par\parv(fork1);\par\par讨论问题；\par\par}\par\par}\par\parPc()\par\par{\par\par
while(1)\par\par{\par\parp(knife2);\par\parp(fork2);\par\par进餐；\par\parv(knife2);\par\parv(fork2);\par\par讨论问题；\par\par}\par\par}\par\parPd()\par\par{\par\parwhile(1)\par\par{\par\parp(knifehttp://www.wendangwang.com/doc/5b1382aa95388e89b25772fb1);\par\parp(fork2);\par\par进餐；\par\parv(knife1);\par\parv(fork2);\par\par讨论问题；\par\par}\par\par}\par\par \par\par8. 请用信号量实现对某数据库的读者－写者互斥。\par\par要求：（1）读者与写者之间互斥，写者与写者之间互斥。\par\par（2）读者之间不互斥。\par\par解：本题是读者－写者问题。在本题中，允许读进程同时读数据库，但写进程正在写数据库时不允许其他进程读该数据库，也不允许其他进程写该数据库。为了解决读、写进程之间的同步，应该设置2个信号量和一个共享变量：读互斥信号量rmutex，用于使读进程互斥地访问共享变量count，其初值为1；写互斥信号量wmutex，用于实现写进程与读进程的互斥及写进程与写进程的互斥，其初值为1；共享变量count，用于记录当前正在读数据库的读进程数目，初值为0。其工作过程描述如下：\par\parSemaphore rmutex=1;\par\parSemaphore wmutex=1;\par\parInt count=0;\par\parMain()\par\par{\par\parCobegin\par\parReader();\par\parWriter();\par\parCoend\par\par}\par\parReader()\par\par
{\par\parWhile(true)\par\par{\par\parP(rmutex);\par\parIf(count==0) p(wmutex);\par\parCount   ;\par\parV(rmutex);\par\par读数据库；\par\parP(rmutex);\par\parCount --;\par\parIf (count==0) v(wmutex);\par\parV(rmutex);\par\par}\par\par}\par\parWriter()\par\par{\par\parWhile(true)\par\par{\par\parP(wmutex);\par\par写数据库；\par\parV(http://www.wendangwang.com/doc/5b1382aa95388e89b25772fbwmutex);\par\par}\par\par}\par\par注意：正确理解信号量rmutex的意义是理解读者－写者问题的关键。Rmutex是一个互斥信号量，用于使读进程互斥地访问共享变量count。信号量rmutex并不表示读进程的数目，表示读进程数目的是共享变量count。当一个读进程要读数据库时，应将读进程计数count增加1；如果此前（count加1以前）数据库中无读进程，还应对写互斥信号量wmutex做p操作，这样，若数据库中无写进程则通过p操作阻止后续写进程写，若数据库中有写进程，则通过p操作让读进程等待。同理，当一个读进程完成读数据库操作时，应将读进程计数count减少1；如果此时（count减1以后）数据库中已无读进程，还应对写互斥信号量wmutex做v操作，以允许写进程写。\par\par \par\par9. 就绪队列中有10个进程，系统将时间片设为200ms，CPU进行进程切换要花费10ms，试问系统开销所占的比率约为多少？\par\par解：因就绪队列中有10个进程，它们以时间片轮转的方式使用CPU，时间片长度为200ms。当一个时间片用完时，调度进程将当前运行进程设置为就绪状态并放入就绪队列尾，再从就绪队列首选择进程投入运行，这一过程（进程切换）要花费时间10ms。因此系统开销所占比率为：10/（200 10）=4.8%\par\par \par\par10. 在单CPU和两台输入/输出设备（I1，I2）的多道程序设计环境下，同时投入三个作业Job1、Job2、Job3运行。这三个作业对CPU和输入/输出设备的使用顺序和时间如下所示：\par\parJob1:I2(30ms);CPU(10ms);I1(30ms);CPU(10ms);I2(20ms)\par\par
Job2:I2(20ms);CPU(20ms);I2(40ms)\par\parJob3:CPU(30ms);I1(20ms); CPU(10ms);I1(10ms)\par\par假定CPU、I1、I2都能并行工作，Job1优先级最高，Job2次之，Job3优先级最低，优先级高的作业可以抢占优先级低的作业的CPU但不抢占I1和I2。试求： 三个作业从投入到完成http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb分别需要的时间\par\par从投入到完成的CPU利用率\par\parI/O设备利用率。\par\par解：三个作业并发执行时的工作情况如图4.2所示。\par\par（1）由上图可以看出Job1从投入到运行完成需要110ms，Job2从投入到运行完成需要90ms，Job3从投入到运行完成需要110ms.\par\par（2）CPU在时间段60ms到70ms，80ms至90ms，100ms至110ms期间空闲，所以CPU的利用率为：（110-30）/110=72.7%\par\par（4） 设备I1在时间段20ms到40ms，90ms至100ms期间空闲，所以设备I1\par\par的利用率为：（110-30）/110=72.7%；设备I2在时间段30ms至50ms期间空闲，所以设备I2的利用率为：（110-20）/110=81.8%。\par\par \par\par11.试利用Bernstein 条件证明上题中的S2和S3语句是可以并发执行的，而S3和S4语句是不能并发执行的？\par\par【解】（1） ∵R(S2) ∩ W( S3)={}；\par\parW(S2) ∩ R(S3)={}；\par\parW(S2) ∩ W(S3)={}；\par\par∴R(S2) ∩ W( S3)∪ W(S2) ∩ R(S3) ∪ W(S2) ∩ W(S3)={}\par\par∴S2、S3可以并发执行\par\par（2）∵R(S3) ∩ W( S4)={}；\par\parW(S3) ∩ R(S4)={c}；\par\parW(S3) ∩ W(S4)={};\par\par∴R(S3) ∩ W( S4)∪ W(S3) ∩ R(S4) ∪ W(S3) ∩ W(S4)={c}不是空集\par\par∴S3，S4不能并发执行\par\par \par\par12.什么是临界资源（P16）和临界区（P50）？\par\par【解】那些多个进程必须互斥访问的方式来实现资源共享的硬件资源和软件资源叫临界资源。 我们把在每个进程中访问临界资源的那段代码称为临界区。\par\par \par\par13、在OS中引起进程调度的主要因素有哪些？\par\par【解】\par\http://www.wendangwang.com/doc/5b1382aa95388e89b25772fbpar在OS中引起进程调度的主要因素有：\par\par（1）缺乏资源。正在运行的进程因为某个条件不能满足，不得不进入阻塞状态，此时，运行进程被撤下，引起调度使另一个进程进入运行\par\par（2）时间片到。如果是分时系统或者以时间片作为激励调度的系统，时间片是引起硬件激励的主要因素，每当时间片到，正在运行的进程被暂时停止，将它再次排入就绪队列，引起调度使另一就绪进程进入运行。\par\par（3）外部中断。外部中断信号也将引起调度，如打印机打印完成，通过打印通道或者信号线路传送一激励信号，将原等待进程唤醒重新进入运行，或引起调度\par\par
使另一进程运行。\par\par（4）进程结束。进程正常执行完毕，退出并终止，此时将激励系统调度另一进程进入运行。\par\par \par\par14.有两个进程P1和P2，它们执行的过程如下：\par\parP1: 10秒CPU操作、20秒I/O操作（设备1）、5秒CPU操作、10秒I/O操作（设备2）、5秒CPU操作、结束\par\parP2: 15秒I/O操作（设备1）、10秒CPU操作、15秒I/O操作（设备2）、10秒CPU操作、结束\par\par（1） 如果进程P1和P2顺序执行，请画出进程P1和P2执行情况图；\par\par（2） 如果进程P1和P2并发执行，请画出进程P1和P2执行情况图；\par\par（3） 分别计算在（1）和（2）情况下，CPU的利用率、设备1和设备2的\par\par利用率。\par\par解：\par\par(1)\par\parP1:\par\par[此处图片未下载成功]\par\par
0         10                  30    35        45    50\par\parP2:\par\par[此处图片未下载成功]\par\par
50            65         75             90         100\par\par(2)\par\parP1                 P1\par\par[此处图片未下载成功]\par\par
0         10   15      http://www.wendangwang.com/doc/5b1382aa95388e89b25772fb  25      35     40           50    55\par\par(3)\par\par在情况（1）下，\par\parCPU的利用率=40/100=40%\par\par设备1的利用率=35/100=35%\par\par设备2的利用率=25/100=25%\par\par在情况（2）下，\par\parCPU的利用率=40/55=73%\par\par设备1的利用率=35/55=64%\par\par设备2的利用率=25/55=45%\par\par \par\par15.在五状态图中，假如计算机只有一个CPU，如果系统中有N个进程：\par\par（1）运行的进程最多几个，最少几个；就绪进程最多几个最少几个；等待进程\par\par最多几个，最少几个？\par\par
（2）有没有这样的状态转换，为什么？\par\par等待―&gt;运行   ；   就绪―&gt;等待\par\par（3）一个进程状态的转换是否会导致另一个进程的状态转换，请列出所有的可\par\par能。\par\par解：\par\par（1）如果系统中有N个进程，运行的进程最多1个，最少0个；就绪进程最多N-1个最少0个；等待进程最多N个，最少0个。\par\par（2）没有这样的状态转换。\par\par（3） 新建  到  就绪    导致     运行   到   就绪\par\par就绪  到  运行    导致     无\par\par运行  到\par\par运行  到\par\par等待  到\par\par运行  到  就绪    导致     就绪   到   等待    导致     就绪   到   就绪    导致     就绪   到   结束    导致     就绪   到\par\par运行 运行 等待 运行\par\par
}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \fs24\loch\af13\insrsid6493368\charrsid15866361 
\par }\pard \ltrpar\qj \li0\ri0\sl180\slmult0\nowidctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6493368 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid6493368 
\par 
\par 
\par 
\par 
\par }{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\insrsid15817367\charrsid15817367 \loch\af13\hich\af13\dbch\f13 \'ce\'c4}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\insrsid11941893 \loch\af13\hich\af13\dbch\f13 \'b5\'b5}{\rtlch\fcs1 \af0\afs28 
\ltrch\fcs0 \f13\fs28\insrsid15817367\charrsid15817367 \loch\af13\hich\af13\dbch\f13 \'cf\'c2\'d4\'d8\'cd\'f8\'ca\'c7\'d7\'a8\'d2\'b5\'b5\'c4\'c3\'e2\'b7\'d1\'ce\'c4\'b5\'b5\'cb\'d1\'cb\'f7\'d3\'eb\'cf\'c2\'d4\'d8\'cd\'f8\'d5\'be\'a3\'ac\'cc\'e1\'b9\'a9
\'d0\'d0\'d2\'b5\'d7\'ca\'c1\'cf\'a3\'ac\'bf\'bc\'ca\'d4\'d7\'ca\'c1\'cf\'a3\'ac\'bd\'cc\'d1\'a7\'bf\'ce\'bc\'fe\'a3\'ac\'d1\'a7\'ca\'f5\'c2\'db\'ce\'c4\'a3\'ac\'bc\'bc\'ca\'f5\'d7\'ca\'c1\'cf\'a3\'ac\'d1\'d0\'be\'bf\'b1\'a8\'b8\'e6\'a3\'ac\'b9\'a4
\'d7\'f7\'b7\'b6\'ce\'c4\'a3\'ac\'d7\'ca\'b8\'f1\'bf\'bc\'ca\'d4\'a3\'ac}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\insrsid15817367\charrsid15817367 \hich\af13\dbch\af13\loch\f13 word}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 
\f13\fs28\insrsid15817367\charrsid15817367 \loch\af13\hich\af13\dbch\f13 \'ce\'c4\'b5\'b5\'a3\'ac\'d7\'a8\'d2\'b5\'ce\'c4\'cf\'d7\'a3\'ac\'d3\'a6\'d3\'c3\'ce\'c4\'ca\'e9\'a3\'ac\'d0\'d0\'d2\'b5\'c2\'db\'ce\'c4\'b5\'c8\'ce\'c4\'b5\'b5\'cb\'d1\'cb\'f7
\'d3\'eb\'ce\'c4\'b5\'b5\'cf\'c2\'d4\'d8\'a3\'ac\'ca\'c7\'c4\'fa\'ce\'c4\'b5\'b5\'d0\'b4\'d7\'f7\'ba\'cd\'b2\'e9\'d5\'d2\'b2\'ce\loch\af13\hich\af13\dbch\f13 \'bf\'bc\'d7\'ca\'c1\'cf\'b5\'c4\'b1\'d8\'b1\'b8\'cd\'f8\'d5\'be\'a1\'a3}{\rtlch\fcs1 \af0\afs28 
\ltrch\fcs0 \fs28\loch\af13\insrsid15817367 
\par }{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid11941893 \loch\af13\hich\af13\dbch\f13 \'ce\'c4\'b5\'b5}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid6493368\charrsid6493368 \loch\af13\hich\af13\dbch\f13 \'cf\'c2\'d4\'d8}{
\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid6493368\charrsid6493368 \hich\af13\dbch\af13\loch\f13  }{\field{\*\fldinst {\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid11941893 \hich\af13\dbch\af13\loch\f13  HYPERLINK "}{\rtlch\fcs1 
\af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid11941893\charrsid11941893 \hich\af13\dbch\af13\loch\f13 https://www.wendangwang.com/}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid11941893 \hich\af13\dbch\af13\loch\f13 " }{\rtlch\fcs1 \af0\afs28 
\ltrch\fcs0 \fs28\cf11\loch\af13\insrsid8944438\charrsid13773176 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001e00000068007400740070003a002f002f007700770077002e00770065006e00640061006e0067007800690061007a00610069002e0063006f006d002f000000e0c9ea79f9bace118c8200aa004ba90b5400000068007400740070003a002f002f0077007700
77002e00770065006e00640061006e0067007800690061007a00610069002e0063006f006d002f000000795881f43b1d7f48af2c825dc485276300000000a5ab000000000000}}}{\fldrslt {\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \cs17\f13\fs28\ul\cf2\insrsid11941893\charrsid13773176 
\hich\af13\dbch\af13\loch\f13 https://www.wendangwang.com/}}}\sectd \linex0\headery851\footery992\colsx425\endnhere\sectlinegrid312\sectspecifyl\sectrsid6493368\sftnbj {\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 
\fs28\cf11\loch\af13\insrsid6493368\charrsid6493368 
\par }{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid11941893 \loch\af13\hich\af13\dbch\f13 \'d2\'da\'cd\'f2}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \f13\fs28\cf11\insrsid6493368\charrsid6493368 \loch\af13\hich\af13\dbch\f13 \'ce\'c4\'b5\'b5\'d7\'ca
\'c1\'cf\'a3\'ac\'b5\'c8\'c4\'e3\'c0\'b4\'b7\'a2\'cf\'d6}{\rtlch\fcs1 \af0\afs28 \ltrch\fcs0 \fs28\cf11\loch\af13\insrsid15098623\charrsid6493368 
\par }}